// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.StructuralLoadResource
{
	public partial class @IfcFailureConnectionCondition : IIfcFailureConnectionCondition
	{
		Xbim.Ifc4.MeasureResource.IfcForceMeasure? IIfcFailureConnectionCondition.TensionFailureX 
		{ 
			get
			{
				if (TensionFailureX == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcForceMeasure((double)TensionFailureX);
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcForceMeasure? IIfcFailureConnectionCondition.TensionFailureY 
		{ 
			get
			{
				if (TensionFailureY == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcForceMeasure((double)TensionFailureY);
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcForceMeasure? IIfcFailureConnectionCondition.TensionFailureZ 
		{ 
			get
			{
				if (TensionFailureZ == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcForceMeasure((double)TensionFailureZ);
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcForceMeasure? IIfcFailureConnectionCondition.CompressionFailureX 
		{ 
			get
			{
				if (CompressionFailureX == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcForceMeasure((double)CompressionFailureX);
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcForceMeasure? IIfcFailureConnectionCondition.CompressionFailureY 
		{ 
			get
			{
				if (CompressionFailureY == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcForceMeasure((double)CompressionFailureY);
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcForceMeasure? IIfcFailureConnectionCondition.CompressionFailureZ 
		{ 
			get
			{
				if (CompressionFailureZ == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcForceMeasure((double)CompressionFailureZ);
			} 
		}
	}
}