// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.StructuralLoadResource
{
	public partial class @IfcBoundaryEdgeCondition : IIfcBoundaryEdgeCondition
	{
		IIfcModulusOfTranslationalSubgradeReactionSelect IIfcBoundaryEdgeCondition.TranslationalStiffnessByLengthX 
		{ 
			get
			{
				//## Handle return of TranslationalStiffnessByLengthX for which no match was found
                if (_translationalStiffnessByLengthX != null)
                    return _translationalStiffnessByLengthX;

                var value = LinearStiffnessByLengthX;
                if (!value.HasValue) return null;
                return new Ifc4.MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure(value.Value);
			    //##
			} 
			set
			{
				//## Handle setting of TranslationalStiffnessByLengthX for which no match was found
                if (value == null)
                {
                    LinearStiffnessByLengthX = null;
                    SetValue(v => _translationalStiffnessByLengthX = v, _translationalStiffnessByLengthX, null, "TranslationalStiffnessByAreaX", byte.MaxValue);
                    return;

                }
                if (value is Ifc4.MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure)
                {
                    LinearStiffnessByLengthX = new MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure((Ifc4.MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure)value);
                    SetValue(v => _translationalStiffnessByLengthX = v, _translationalStiffnessByLengthX, null, "TranslationalStiffnessByAreaX", byte.MaxValue);
                    return;
                }

                SetValue(v => _translationalStiffnessByLengthX = v, _translationalStiffnessByLengthX, value, "TranslationalStiffnessByAreaX", byte.MaxValue);
                return;
                
				//##
				NotifyPropertyChanged("TranslationalStiffnessByLengthX");
				
			}
		}
		IIfcModulusOfTranslationalSubgradeReactionSelect IIfcBoundaryEdgeCondition.TranslationalStiffnessByLengthY 
		{ 
			get
			{
				//## Handle return of TranslationalStiffnessByLengthY for which no match was found
                if (_translationalStiffnessByLengthY != null)
                    return _translationalStiffnessByLengthY;

                var value = LinearStiffnessByLengthY;
                if (!value.HasValue) return null;
                return new Ifc4.MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure(value.Value);
                //##
			} 
			set
			{
				//## Handle setting of TranslationalStiffnessByLengthY for which no match was found
                if (value == null)
                {
                    LinearStiffnessByLengthY = null;
                    SetValue(v => _translationalStiffnessByLengthY = v, _translationalStiffnessByLengthY, null, "TranslationalStiffnessByAreaY", byte.MaxValue);
                    return;

                }
                if (value is Ifc4.MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure)
                {
                    LinearStiffnessByLengthY = new MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure((Ifc4.MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure)value);
                    SetValue(v => _translationalStiffnessByLengthY = v, _translationalStiffnessByLengthY, null, "TranslationalStiffnessByAreaY", byte.MaxValue);
                    return;
                }

                SetValue(v => _translationalStiffnessByLengthY = v, _translationalStiffnessByLengthY, value, "TranslationalStiffnessByAreaY", byte.MaxValue);
                return;

                //##
				NotifyPropertyChanged("TranslationalStiffnessByLengthY");
				
			}
		}
		IIfcModulusOfTranslationalSubgradeReactionSelect IIfcBoundaryEdgeCondition.TranslationalStiffnessByLengthZ 
		{ 
			get
			{
				//## Handle return of TranslationalStiffnessByLengthZ for which no match was found
                if (_translationalStiffnessByLengthZ != null)
                    return _translationalStiffnessByLengthZ;

                var value = LinearStiffnessByLengthZ;
                if (!value.HasValue) return null;
                return new Ifc4.MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure(value.Value);
                //##
			} 
			set
			{
				//## Handle setting of TranslationalStiffnessByLengthZ for which no match was found
                if (value == null)
                {
                    LinearStiffnessByLengthZ = null;
                    SetValue(v => _translationalStiffnessByLengthZ = v, _translationalStiffnessByLengthZ, null, "TranslationalStiffnessByAreaZ", byte.MaxValue);
                    return;

                }
                if (value is Ifc4.MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure)
                {
                    LinearStiffnessByLengthZ = new MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure((Ifc4.MeasureResource.IfcModulusOfLinearSubgradeReactionMeasure)value);
                    SetValue(v => _translationalStiffnessByLengthZ = v, _translationalStiffnessByLengthZ, null, "TranslationalStiffnessByAreaZ", byte.MaxValue);
                    return;
                }

                SetValue(v => _translationalStiffnessByLengthZ = v, _translationalStiffnessByLengthZ, value, "TranslationalStiffnessByAreaZ", byte.MaxValue);
                return;

                //##
				NotifyPropertyChanged("TranslationalStiffnessByLengthZ");
				
			}
		}
		IIfcModulusOfRotationalSubgradeReactionSelect IIfcBoundaryEdgeCondition.RotationalStiffnessByLengthX 
		{ 
			get
			{
 
				if(!RotationalStiffnessByLengthX.HasValue) return null;
				return new Ifc4.MeasureResource.IfcModulusOfRotationalSubgradeReactionMeasure(RotationalStiffnessByLengthX.Value);
			} 
			set
			{
				throw new System.NotImplementedException();
				
			}
		}
		IIfcModulusOfRotationalSubgradeReactionSelect IIfcBoundaryEdgeCondition.RotationalStiffnessByLengthY 
		{ 
			get
			{
 
				if(!RotationalStiffnessByLengthY.HasValue) return null;
				return new Ifc4.MeasureResource.IfcModulusOfRotationalSubgradeReactionMeasure(RotationalStiffnessByLengthY.Value);
			} 
			set
			{
				throw new System.NotImplementedException();
				
			}
		}
		IIfcModulusOfRotationalSubgradeReactionSelect IIfcBoundaryEdgeCondition.RotationalStiffnessByLengthZ 
		{ 
			get
			{
 
				if(!RotationalStiffnessByLengthZ.HasValue) return null;
				return new Ifc4.MeasureResource.IfcModulusOfRotationalSubgradeReactionMeasure(RotationalStiffnessByLengthZ.Value);
			} 
			set
			{
				throw new System.NotImplementedException();
				
			}
		}
	//## Custom code
        private IIfcModulusOfTranslationalSubgradeReactionSelect _translationalStiffnessByLengthX;
        private IIfcModulusOfTranslationalSubgradeReactionSelect _translationalStiffnessByLengthY;
        private IIfcModulusOfTranslationalSubgradeReactionSelect _translationalStiffnessByLengthZ;
	//##
	}
}