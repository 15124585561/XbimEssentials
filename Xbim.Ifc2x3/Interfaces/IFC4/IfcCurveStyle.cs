// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.PresentationAppearanceResource
{
	public partial class @IfcCurveStyle : IIfcCurveStyle
	{
		Xbim.Ifc4.PresentationAppearanceResource.IfcCurveFontOrScaledCurveFontSelect IIfcCurveStyle.CurveFont 
		{ 
			get
			{
				if (CurveFont == null) return null;
				var ifcpredefinedcurvefont = CurveFont as Xbim.Ifc2x3.PresentationAppearanceResource.IfcPreDefinedCurveFont;
				if (ifcpredefinedcurvefont != null) 
					return ifcpredefinedcurvefont;
				var ifccurvestylefont = CurveFont as Xbim.Ifc2x3.PresentationAppearanceResource.IfcCurveStyleFont;
				if (ifccurvestylefont != null) 
					return ifccurvestylefont;
				var ifccurvestylefontandscaling = CurveFont as Xbim.Ifc2x3.PresentationAppearanceResource.IfcCurveStyleFontAndScaling;
				if (ifccurvestylefontandscaling != null) 
					return ifccurvestylefontandscaling;
				return null;
			} 
		}
		Xbim.Ifc4.PresentationAppearanceResource.IfcSizeSelect IIfcCurveStyle.CurveWidth 
		{ 
			get
			{
				if (CurveWidth == null) return null;
				if (CurveWidth is Xbim.Ifc2x3.MeasureResource.IfcRatioMeasure) 
					return new Xbim.Ifc4.MeasureResource.IfcRatioMeasure((double)(Xbim.Ifc2x3.MeasureResource.IfcRatioMeasure)CurveWidth);
				if (CurveWidth is Xbim.Ifc2x3.MeasureResource.IfcLengthMeasure) 
					return new Xbim.Ifc4.MeasureResource.IfcLengthMeasure((double)(Xbim.Ifc2x3.MeasureResource.IfcLengthMeasure)CurveWidth);
				if (CurveWidth is Xbim.Ifc2x3.MeasureResource.IfcDescriptiveMeasure) 
					return new Xbim.Ifc4.MeasureResource.IfcDescriptiveMeasure((string)(Xbim.Ifc2x3.MeasureResource.IfcDescriptiveMeasure)CurveWidth);
				if (CurveWidth is Xbim.Ifc2x3.MeasureResource.IfcPositiveLengthMeasure) 
					return new Xbim.Ifc4.MeasureResource.IfcPositiveLengthMeasure((double)(Xbim.Ifc2x3.MeasureResource.IfcPositiveLengthMeasure)CurveWidth);
				if (CurveWidth is Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure) 
					return new Xbim.Ifc4.MeasureResource.IfcNormalisedRatioMeasure((double)(Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure)CurveWidth);
				if (CurveWidth is Xbim.Ifc2x3.MeasureResource.IfcPositiveRatioMeasure) 
					return new Xbim.Ifc4.MeasureResource.IfcPositiveRatioMeasure((double)(Xbim.Ifc2x3.MeasureResource.IfcPositiveRatioMeasure)CurveWidth);
				return null;
			} 
		}
		Xbim.Ifc4.PresentationAppearanceResource.IfcColour IIfcCurveStyle.CurveColour 
		{ 
			get
			{
				if (CurveColour == null) return null;
				var ifccolourspecification = CurveColour as Xbim.Ifc2x3.PresentationResource.IfcColourSpecification;
				if (ifccolourspecification != null) 
					return ifccolourspecification;
				var ifcpredefinedcolour = CurveColour as Xbim.Ifc2x3.PresentationResource.IfcPreDefinedColour;
				if (ifcpredefinedcolour != null) 
					return ifcpredefinedcolour;
				return null;
			} 
		}
		bool? IIfcCurveStyle.ModelOrDraughting 
		{ 
			get
			{
				//## Handle return of ModelOrDraughting for which no match was found
				//TODO: Handle return of ModelOrDraughting for which no match was found
				throw new System.NotImplementedException();
				//##
			} 
		}
	}
}