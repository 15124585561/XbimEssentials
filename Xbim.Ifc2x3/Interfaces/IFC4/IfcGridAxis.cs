// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.GeometricConstraintResource
{
	public partial class @IfcGridAxis : IIfcGridAxis
	{
		Xbim.Ifc4.MeasureResource.IfcLabel? IIfcGridAxis.AxisTag 
		{ 
			get
			{
				if (AxisTag == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcLabel((string)AxisTag);
			} 
		}
		IIfcCurve IIfcGridAxis.AxisCurve 
		{ 
			get
			{
				return AxisCurve as IIfcCurve;
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcBoolean IIfcGridAxis.SameSense 
		{ 
			get
			{
				return new Xbim.Ifc4.MeasureResource.IfcBoolean((bool)SameSense);
			} 
		}
		IEnumerable<IIfcGrid> IIfcGridAxis.PartOfW 
		{ 
			get
			{
				return Model.Instances.Where<IIfcGrid>(e => e.WAxes != null &&  e.WAxes.Contains(this));
			} 
		}
		IEnumerable<IIfcGrid> IIfcGridAxis.PartOfV 
		{ 
			get
			{
				return Model.Instances.Where<IIfcGrid>(e => e.VAxes != null &&  e.VAxes.Contains(this));
			} 
		}
		IEnumerable<IIfcGrid> IIfcGridAxis.PartOfU 
		{ 
			get
			{
				return Model.Instances.Where<IIfcGrid>(e => e.UAxes != null &&  e.UAxes.Contains(this));
			} 
		}
		IEnumerable<IIfcVirtualGridIntersection> IIfcGridAxis.HasIntersections 
		{ 
			get
			{
				return Model.Instances.Where<IIfcVirtualGridIntersection>(e => e.IntersectingAxes != null &&  e.IntersectingAxes.Contains(this));
			} 
		}
	}
}