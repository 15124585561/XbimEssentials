// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.StructuralLoadResource
{
	public partial class @IfcStructuralLoadSingleDisplacement : IIfcStructuralLoadSingleDisplacement
	{
		Ifc4.MeasureResource.IfcLengthMeasure? IIfcStructuralLoadSingleDisplacement.DisplacementX 
		{ 
			get
			{
				if (!DisplacementX.HasValue) return null;
				return new Ifc4.MeasureResource.IfcLengthMeasure(DisplacementX.Value);
			} 
			set
			{
				if (!value.HasValue)
				{
					DisplacementX =  null ;
					return;
				}
				DisplacementX = new MeasureResource.IfcLengthMeasure(value.Value);
				
			}
		}
		Ifc4.MeasureResource.IfcLengthMeasure? IIfcStructuralLoadSingleDisplacement.DisplacementY 
		{ 
			get
			{
				if (!DisplacementY.HasValue) return null;
				return new Ifc4.MeasureResource.IfcLengthMeasure(DisplacementY.Value);
			} 
			set
			{
				if (!value.HasValue)
				{
					DisplacementY =  null ;
					return;
				}
				DisplacementY = new MeasureResource.IfcLengthMeasure(value.Value);
				
			}
		}
		Ifc4.MeasureResource.IfcLengthMeasure? IIfcStructuralLoadSingleDisplacement.DisplacementZ 
		{ 
			get
			{
				if (!DisplacementZ.HasValue) return null;
				return new Ifc4.MeasureResource.IfcLengthMeasure(DisplacementZ.Value);
			} 
			set
			{
				if (!value.HasValue)
				{
					DisplacementZ =  null ;
					return;
				}
				DisplacementZ = new MeasureResource.IfcLengthMeasure(value.Value);
				
			}
		}
		Ifc4.MeasureResource.IfcPlaneAngleMeasure? IIfcStructuralLoadSingleDisplacement.RotationalDisplacementRX 
		{ 
			get
			{
				if (!RotationalDisplacementRX.HasValue) return null;
				return new Ifc4.MeasureResource.IfcPlaneAngleMeasure(RotationalDisplacementRX.Value);
			} 
			set
			{
				if (!value.HasValue)
				{
					RotationalDisplacementRX =  null ;
					return;
				}
				RotationalDisplacementRX = new MeasureResource.IfcPlaneAngleMeasure(value.Value);
				
			}
		}
		Ifc4.MeasureResource.IfcPlaneAngleMeasure? IIfcStructuralLoadSingleDisplacement.RotationalDisplacementRY 
		{ 
			get
			{
				if (!RotationalDisplacementRY.HasValue) return null;
				return new Ifc4.MeasureResource.IfcPlaneAngleMeasure(RotationalDisplacementRY.Value);
			} 
			set
			{
				if (!value.HasValue)
				{
					RotationalDisplacementRY =  null ;
					return;
				}
				RotationalDisplacementRY = new MeasureResource.IfcPlaneAngleMeasure(value.Value);
				
			}
		}
		Ifc4.MeasureResource.IfcPlaneAngleMeasure? IIfcStructuralLoadSingleDisplacement.RotationalDisplacementRZ 
		{ 
			get
			{
				if (!RotationalDisplacementRZ.HasValue) return null;
				return new Ifc4.MeasureResource.IfcPlaneAngleMeasure(RotationalDisplacementRZ.Value);
			} 
			set
			{
				if (!value.HasValue)
				{
					RotationalDisplacementRZ =  null ;
					return;
				}
				RotationalDisplacementRZ = new MeasureResource.IfcPlaneAngleMeasure(value.Value);
				
			}
		}
	//## Custom code
	//##
	}
}