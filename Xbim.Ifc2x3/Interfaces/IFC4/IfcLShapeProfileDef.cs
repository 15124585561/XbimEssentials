// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.ProfileResource
{
	public partial class @IfcLShapeProfileDef : IIfcLShapeProfileDef
	{
		Xbim.Ifc4.MeasureResource.IfcPositiveLengthMeasure IIfcLShapeProfileDef.Depth 
		{ 
			get
			{
				return new Xbim.Ifc4.MeasureResource.IfcPositiveLengthMeasure((double)Depth);
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcPositiveLengthMeasure? IIfcLShapeProfileDef.Width 
		{ 
			get
			{
				if (Width == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcPositiveLengthMeasure((double)Width);
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcPositiveLengthMeasure IIfcLShapeProfileDef.Thickness 
		{ 
			get
			{
				return new Xbim.Ifc4.MeasureResource.IfcPositiveLengthMeasure((double)Thickness);
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcNonNegativeLengthMeasure? IIfcLShapeProfileDef.FilletRadius 
		{ 
			get
			{
				if (FilletRadius == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcNonNegativeLengthMeasure((double)FilletRadius);
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcNonNegativeLengthMeasure? IIfcLShapeProfileDef.EdgeRadius 
		{ 
			get
			{
				if (EdgeRadius == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcNonNegativeLengthMeasure((double)EdgeRadius);
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcPlaneAngleMeasure? IIfcLShapeProfileDef.LegSlope 
		{ 
			get
			{
				if (LegSlope == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcPlaneAngleMeasure((double)LegSlope);
			} 
		}
	}
}