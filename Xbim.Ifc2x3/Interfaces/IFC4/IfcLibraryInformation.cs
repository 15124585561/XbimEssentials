// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.ExternalReferenceResource
{
	public partial class @IfcLibraryInformation : IIfcLibraryInformation
	{
		Xbim.Ifc4.MeasureResource.IfcLabel IIfcLibraryInformation.Name 
		{ 
			get
			{
				return new Xbim.Ifc4.MeasureResource.IfcLabel((string)Name);
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcLabel? IIfcLibraryInformation.Version 
		{ 
			get
			{
				if (Version == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcLabel((string)Version);
			} 
		}
		Xbim.Ifc4.ActorResource.IfcActorSelect IIfcLibraryInformation.Publisher 
		{ 
			get
			{
				throw new System.NotImplementedException();
			} 
		}
		Xbim.Ifc4.DateTimeResource.IfcDateTime? IIfcLibraryInformation.VersionDate 
		{ 
			get
			{
				throw new System.NotImplementedException();
			} 
		}
		Xbim.Ifc4.ExternalReferenceResource.IfcURIReference? IIfcLibraryInformation.Location 
		{ 
			get
			{
				throw new System.NotImplementedException();
			} 
		}
		Xbim.Ifc4.MeasureResource.IfcText? IIfcLibraryInformation.Description 
		{ 
			get
			{
				throw new System.NotImplementedException();
			} 
		}
		IEnumerable<IIfcRelAssociatesLibrary> IIfcLibraryInformation.LibraryInfoForObjects 
		{ 
			get
			{
				return Model.Instances.Where<IIfcRelAssociatesLibrary>(e => (e.RelatingLibrary as IfcLibraryInformation) == this);
			} 
		}
		IEnumerable<IIfcLibraryReference> IIfcLibraryInformation.HasLibraryReferences 
		{ 
			get
			{
				return Model.Instances.Where<IIfcLibraryReference>(e => (e.ReferencedLibrary as IfcLibraryInformation) == this);
			} 
		}
	}
}