// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.ProfileResource
{
	public partial class @IfcAsymmetricIShapeProfileDef : IIfcAsymmetricIShapeProfileDef
	{
		Ifc4.MeasureResource.IfcPositiveLengthMeasure IIfcAsymmetricIShapeProfileDef.BottomFlangeWidth 
		{ 
			get
			{
				//## Handle return of BottomFlangeWidth for which no match was found
			    return new Ifc4.MeasureResource.IfcPositiveLengthMeasure(OverallWidth);
			    //##
			} 
			set
			{
				//## Handle setting of BottomFlangeWidth for which no match was found
				//TODO: Handle setting of BottomFlangeWidth for which no match was found
				throw new System.NotImplementedException();
				//##
				
			}
		}
		Ifc4.MeasureResource.IfcPositiveLengthMeasure IIfcAsymmetricIShapeProfileDef.OverallDepth 
		{ 
			get
			{
				return new Ifc4.MeasureResource.IfcPositiveLengthMeasure(OverallDepth);
			} 
			set
			{
				OverallDepth = new MeasureResource.IfcPositiveLengthMeasure(value);
				
			}
		}
		Ifc4.MeasureResource.IfcPositiveLengthMeasure IIfcAsymmetricIShapeProfileDef.WebThickness 
		{ 
			get
			{
				return new Ifc4.MeasureResource.IfcPositiveLengthMeasure(WebThickness);
			} 
			set
			{
				WebThickness = new MeasureResource.IfcPositiveLengthMeasure(value);
				
			}
		}
		Ifc4.MeasureResource.IfcPositiveLengthMeasure IIfcAsymmetricIShapeProfileDef.BottomFlangeThickness 
		{ 
			get
			{
				//## Handle return of BottomFlangeThickness for which no match was found
                return new Ifc4.MeasureResource.IfcPositiveLengthMeasure(FlangeThickness);
				//##
			} 
			set
			{
				//## Handle setting of BottomFlangeThickness for which no match was found
				//TODO: Handle setting of BottomFlangeThickness for which no match was found
				throw new System.NotImplementedException();
				//##
				
			}
		}
		Ifc4.MeasureResource.IfcNonNegativeLengthMeasure? IIfcAsymmetricIShapeProfileDef.BottomFlangeFilletRadius 
		{ 
			get
			{
				//## Handle return of BottomFlangeFilletRadius for which no match was found
			    if (FilletRadius.HasValue)
			        return new Ifc4.MeasureResource.IfcNonNegativeLengthMeasure(FilletRadius.Value);
			    return null;
			    //##
			} 
			set
			{
				//## Handle setting of BottomFlangeFilletRadius for which no match was found
				//TODO: Handle setting of BottomFlangeFilletRadius for which no match was found
				throw new System.NotImplementedException();
				//##
				
			}
		}
		Ifc4.MeasureResource.IfcPositiveLengthMeasure IIfcAsymmetricIShapeProfileDef.TopFlangeWidth 
		{ 
			get
			{
				return new Ifc4.MeasureResource.IfcPositiveLengthMeasure(TopFlangeWidth);
			} 
			set
			{
				TopFlangeWidth = new MeasureResource.IfcPositiveLengthMeasure(value);
				
			}
		}
		Ifc4.MeasureResource.IfcPositiveLengthMeasure? IIfcAsymmetricIShapeProfileDef.TopFlangeThickness 
		{ 
			get
			{
				if (!TopFlangeThickness.HasValue) return null;
				return new Ifc4.MeasureResource.IfcPositiveLengthMeasure(TopFlangeThickness.Value);
			} 
			set
			{
				if (!value.HasValue)
				{
					TopFlangeThickness =  null ;
					return;
				}
				TopFlangeThickness = new MeasureResource.IfcPositiveLengthMeasure(value.Value);
				
			}
		}
		Ifc4.MeasureResource.IfcNonNegativeLengthMeasure? IIfcAsymmetricIShapeProfileDef.TopFlangeFilletRadius 
		{ 
			get
			{
				if (!TopFlangeFilletRadius.HasValue) return null;
				return new Ifc4.MeasureResource.IfcNonNegativeLengthMeasure(TopFlangeFilletRadius.Value);
			} 
			set
			{
				if (!value.HasValue)
				{
					TopFlangeFilletRadius =  null ;
					return;
				}
				TopFlangeFilletRadius = new MeasureResource.IfcPositiveLengthMeasure(value.Value);
				
			}
		}
		Ifc4.MeasureResource.IfcNonNegativeLengthMeasure? IIfcAsymmetricIShapeProfileDef.BottomFlangeEdgeRadius 
		{ 
			get
			{
				//## Handle return of BottomFlangeEdgeRadius for which no match was found
                if (!CentreOfGravityInY.HasValue) return null;
                return new Ifc4.MeasureResource.IfcNonNegativeLengthMeasure(CentreOfGravityInY.Value);
				//##
			} 
			set
			{
				//## Handle setting of BottomFlangeEdgeRadius for which no match was found
				//TODO: Handle setting of BottomFlangeEdgeRadius for which no match was found
				throw new System.NotImplementedException();
				//##
				
			}
		}
		Ifc4.MeasureResource.IfcPlaneAngleMeasure? IIfcAsymmetricIShapeProfileDef.BottomFlangeSlope 
		{ 
			get
			{
				//## Handle return of BottomFlangeSlope for which no match was found
			    return null;
			    //##
			} 
			set
			{
				//## Handle setting of BottomFlangeSlope for which no match was found
				//TODO: Handle setting of BottomFlangeSlope for which no match was found
				throw new System.NotImplementedException();
				//##
				
			}
		}
		Ifc4.MeasureResource.IfcNonNegativeLengthMeasure? IIfcAsymmetricIShapeProfileDef.TopFlangeEdgeRadius 
		{ 
			get
			{
				//## Handle return of TopFlangeEdgeRadius for which no match was found
			    return null;
			    //##
			} 
			set
			{
				//## Handle setting of TopFlangeEdgeRadius for which no match was found
				//TODO: Handle setting of TopFlangeEdgeRadius for which no match was found
				throw new System.NotImplementedException();
				//##
				
			}
		}
		Ifc4.MeasureResource.IfcPlaneAngleMeasure? IIfcAsymmetricIShapeProfileDef.TopFlangeSlope 
		{ 
			get
			{
				//## Handle return of TopFlangeSlope for which no match was found
			    return null;
			    //##
			} 
			set
			{
				//## Handle setting of TopFlangeSlope for which no match was found
				//TODO: Handle setting of TopFlangeSlope for which no match was found
				throw new System.NotImplementedException();
				//##
				
			}
		}
	//## Custom code
	//##
	}
}