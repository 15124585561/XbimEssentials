// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.PresentationAppearanceResource
{
	public partial class @IfcSurfaceStyleRendering : IIfcSurfaceStyleRendering
	{
		Xbim.Ifc4.MeasureResource.IfcNormalisedRatioMeasure? IIfcSurfaceStyleRendering.Transparency 
		{ 
			get
			{
				if (Transparency == null) return null;
				return new Xbim.Ifc4.MeasureResource.IfcNormalisedRatioMeasure((double)Transparency);
			} 
		}
		Xbim.Ifc4.PresentationAppearanceResource.IfcColourOrFactor IIfcSurfaceStyleRendering.DiffuseColour 
		{ 
			get
			{
				if (DiffuseColour == null) return null;
				var ifccolourrgb = DiffuseColour as Xbim.Ifc2x3.PresentationResource.IfcColourRgb;
				if (ifccolourrgb != null) 
					return ifccolourrgb;
				if (DiffuseColour is Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure) 
					return new Xbim.Ifc4.MeasureResource.IfcNormalisedRatioMeasure((double)(Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure)DiffuseColour);
				return null;
			} 
		}
		Xbim.Ifc4.PresentationAppearanceResource.IfcColourOrFactor IIfcSurfaceStyleRendering.TransmissionColour 
		{ 
			get
			{
				if (TransmissionColour == null) return null;
				var ifccolourrgb = TransmissionColour as Xbim.Ifc2x3.PresentationResource.IfcColourRgb;
				if (ifccolourrgb != null) 
					return ifccolourrgb;
				if (TransmissionColour is Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure) 
					return new Xbim.Ifc4.MeasureResource.IfcNormalisedRatioMeasure((double)(Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure)TransmissionColour);
				return null;
			} 
		}
		Xbim.Ifc4.PresentationAppearanceResource.IfcColourOrFactor IIfcSurfaceStyleRendering.DiffuseTransmissionColour 
		{ 
			get
			{
				if (DiffuseTransmissionColour == null) return null;
				var ifccolourrgb = DiffuseTransmissionColour as Xbim.Ifc2x3.PresentationResource.IfcColourRgb;
				if (ifccolourrgb != null) 
					return ifccolourrgb;
				if (DiffuseTransmissionColour is Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure) 
					return new Xbim.Ifc4.MeasureResource.IfcNormalisedRatioMeasure((double)(Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure)DiffuseTransmissionColour);
				return null;
			} 
		}
		Xbim.Ifc4.PresentationAppearanceResource.IfcColourOrFactor IIfcSurfaceStyleRendering.ReflectionColour 
		{ 
			get
			{
				if (ReflectionColour == null) return null;
				var ifccolourrgb = ReflectionColour as Xbim.Ifc2x3.PresentationResource.IfcColourRgb;
				if (ifccolourrgb != null) 
					return ifccolourrgb;
				if (ReflectionColour is Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure) 
					return new Xbim.Ifc4.MeasureResource.IfcNormalisedRatioMeasure((double)(Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure)ReflectionColour);
				return null;
			} 
		}
		Xbim.Ifc4.PresentationAppearanceResource.IfcColourOrFactor IIfcSurfaceStyleRendering.SpecularColour 
		{ 
			get
			{
				if (SpecularColour == null) return null;
				var ifccolourrgb = SpecularColour as Xbim.Ifc2x3.PresentationResource.IfcColourRgb;
				if (ifccolourrgb != null) 
					return ifccolourrgb;
				if (SpecularColour is Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure) 
					return new Xbim.Ifc4.MeasureResource.IfcNormalisedRatioMeasure((double)(Xbim.Ifc2x3.MeasureResource.IfcNormalisedRatioMeasure)SpecularColour);
				return null;
			} 
		}
		Xbim.Ifc4.PresentationAppearanceResource.IfcSpecularHighlightSelect IIfcSurfaceStyleRendering.SpecularHighlight 
		{ 
			get
			{
				if (SpecularHighlight == null) return null;
				if (SpecularHighlight is Xbim.Ifc2x3.PresentationAppearanceResource.IfcSpecularExponent) 
					return new Xbim.Ifc4.PresentationAppearanceResource.IfcSpecularExponent((double)(Xbim.Ifc2x3.PresentationAppearanceResource.IfcSpecularExponent)SpecularHighlight);
				if (SpecularHighlight is Xbim.Ifc2x3.PresentationAppearanceResource.IfcSpecularRoughness) 
					return new Xbim.Ifc4.PresentationAppearanceResource.IfcSpecularRoughness((double)(Xbim.Ifc2x3.PresentationAppearanceResource.IfcSpecularRoughness)SpecularHighlight);
				return null;
			} 
		}
		Xbim.Ifc4.PresentationAppearanceResource.IfcReflectanceMethodEnum IIfcSurfaceStyleRendering.ReflectanceMethod 
		{ 
			get
			{
				switch (ReflectanceMethod)
				{
					case Xbim.Ifc2x3.PresentationAppearanceResource.IfcReflectanceMethodEnum.BLINN:
						return Xbim.Ifc4.PresentationAppearanceResource.IfcReflectanceMethodEnum.BLINN;
					
					case Xbim.Ifc2x3.PresentationAppearanceResource.IfcReflectanceMethodEnum.FLAT:
						return Xbim.Ifc4.PresentationAppearanceResource.IfcReflectanceMethodEnum.FLAT;
					
					case Xbim.Ifc2x3.PresentationAppearanceResource.IfcReflectanceMethodEnum.GLASS:
						return Xbim.Ifc4.PresentationAppearanceResource.IfcReflectanceMethodEnum.GLASS;
					
					case Xbim.Ifc2x3.PresentationAppearanceResource.IfcReflectanceMethodEnum.MATT:
						return Xbim.Ifc4.PresentationAppearanceResource.IfcReflectanceMethodEnum.MATT;
					
					case Xbim.Ifc2x3.PresentationAppearanceResource.IfcReflectanceMethodEnum.METAL:
						return Xbim.Ifc4.PresentationAppearanceResource.IfcReflectanceMethodEnum.METAL;
					
					case Xbim.Ifc2x3.PresentationAppearanceResource.IfcReflectanceMethodEnum.MIRROR:
						return Xbim.Ifc4.PresentationAppearanceResource.IfcReflectanceMethodEnum.MIRROR;
					
					case Xbim.Ifc2x3.PresentationAppearanceResource.IfcReflectanceMethodEnum.PHONG:
						return Xbim.Ifc4.PresentationAppearanceResource.IfcReflectanceMethodEnum.PHONG;
					
					case Xbim.Ifc2x3.PresentationAppearanceResource.IfcReflectanceMethodEnum.PLASTIC:
						return Xbim.Ifc4.PresentationAppearanceResource.IfcReflectanceMethodEnum.PLASTIC;
					
					case Xbim.Ifc2x3.PresentationAppearanceResource.IfcReflectanceMethodEnum.STRAUSS:
						return Xbim.Ifc4.PresentationAppearanceResource.IfcReflectanceMethodEnum.STRAUSS;
					
					case Xbim.Ifc2x3.PresentationAppearanceResource.IfcReflectanceMethodEnum.NOTDEFINED:
						return Xbim.Ifc4.PresentationAppearanceResource.IfcReflectanceMethodEnum.NOTDEFINED;
					
					
					default:
						throw new System.ArgumentOutOfRangeException();
				}
			} 
		}
	}
}