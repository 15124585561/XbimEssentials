// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Interfaces;
using System.Collections.Generic;
using System.Linq;

// ReSharper disable once CheckNamespace
namespace Xbim.Ifc2x3.ProfileResource
{
	public partial class @IfcTShapeProfileDef : IIfcTShapeProfileDef
	{
		Ifc4.MeasureResource.IfcPositiveLengthMeasure IIfcTShapeProfileDef.Depth 
		{ 
			get
			{
				return new Ifc4.MeasureResource.IfcPositiveLengthMeasure((double)Depth);
			} 
		}
		Ifc4.MeasureResource.IfcPositiveLengthMeasure IIfcTShapeProfileDef.FlangeWidth 
		{ 
			get
			{
				return new Ifc4.MeasureResource.IfcPositiveLengthMeasure((double)FlangeWidth);
			} 
		}
		Ifc4.MeasureResource.IfcPositiveLengthMeasure IIfcTShapeProfileDef.WebThickness 
		{ 
			get
			{
				return new Ifc4.MeasureResource.IfcPositiveLengthMeasure((double)WebThickness);
			} 
		}
		Ifc4.MeasureResource.IfcPositiveLengthMeasure IIfcTShapeProfileDef.FlangeThickness 
		{ 
			get
			{
				return new Ifc4.MeasureResource.IfcPositiveLengthMeasure((double)FlangeThickness);
			} 
		}
		Ifc4.MeasureResource.IfcNonNegativeLengthMeasure? IIfcTShapeProfileDef.FilletRadius 
		{ 
			get
			{
				if (FilletRadius == null) return null;
				return new Ifc4.MeasureResource.IfcNonNegativeLengthMeasure((double)FilletRadius);
			} 
		}
		Ifc4.MeasureResource.IfcNonNegativeLengthMeasure? IIfcTShapeProfileDef.FlangeEdgeRadius 
		{ 
			get
			{
				if (FlangeEdgeRadius == null) return null;
				return new Ifc4.MeasureResource.IfcNonNegativeLengthMeasure((double)FlangeEdgeRadius);
			} 
		}
		Ifc4.MeasureResource.IfcNonNegativeLengthMeasure? IIfcTShapeProfileDef.WebEdgeRadius 
		{ 
			get
			{
				if (WebEdgeRadius == null) return null;
				return new Ifc4.MeasureResource.IfcNonNegativeLengthMeasure((double)WebEdgeRadius);
			} 
		}
		Ifc4.MeasureResource.IfcPlaneAngleMeasure? IIfcTShapeProfileDef.WebSlope 
		{ 
			get
			{
				if (WebSlope == null) return null;
				return new Ifc4.MeasureResource.IfcPlaneAngleMeasure((double)WebSlope);
			} 
		}
		Ifc4.MeasureResource.IfcPlaneAngleMeasure? IIfcTShapeProfileDef.FlangeSlope 
		{ 
			get
			{
				if (FlangeSlope == null) return null;
				return new Ifc4.MeasureResource.IfcPlaneAngleMeasure((double)FlangeSlope);
			} 
		}
	}
}